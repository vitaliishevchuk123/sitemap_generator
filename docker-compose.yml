version: '3'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./:/var/www/${APP_NAME}
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "8000:80"
    depends_on:
      - app
      - db
    container_name: ${APP_NAME}_nginx

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - ./:/var/www/${APP_NAME}
    depends_on:
      - db
    container_name: ${APP_NAME}_app

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports:
      - '${DB_CONTAINER_PORT}:${DB_PORT}'
    container_name: ${APP_NAME}_db

  db_test :
    image : postgres:14-alpine
    environment :
      POSTGRES_USER : ${DB_USERNAME}
      POSTGRES_PASSWORD : ${DB_PASSWORD}
      POSTGRES_DB : ${DB_DATABASE_TEST}
    volumes :
      - ./postgres_data_test:/var/lib/postgresql/data/
    ports :
      - '${DB_CONTAINER_PORT_TEST}:${DB_PORT}'
    container_name : ${APP_NAME}_db_test

#  node:
#      image: node:alpine
#      restart: unless-stopped
#      container_name: ${APP_NAME}_node
#      volumes:
#          - ./:/var/www/${APP_NAME}
#      working_dir: /var/www/${APP_NAME}
#      entrypoint: ["npm"]
#      depends_on:
#          - db

  redis:
      image: redis:alpine
      container_name: ${APP_NAME}_redis
      restart: unless-stopped
      command: redis-server
      ports:
          - "6379:6379"
      depends_on:
          - db
